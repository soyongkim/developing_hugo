<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>IoT on SDPortfolio</title>
    <link>https://soyongkim.github.io/tags/iot/</link>
    <description>Recent content in IoT on SDPortfolio</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://soyongkim.github.io/tags/iot/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>가시광 통신 서비스 서버 앱 개발</title>
      <link>https://soyongkim.github.io/projects/creations/vlc_server/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://soyongkim.github.io/projects/creations/vlc_server/</guid>
      <description>가시광 통신 서비스 서버 측 앱 개발 가시광 통신 서비스를 제공하기 위해 구성하였던 전체 장비들은 다음과 같으며, 각 장비들은 모두 KETI에서 개발한 oneM2M 사물인터넷 표준을 따르는 Mobius 플랫폼을 이용하여 개발하였습니다.
IoT Server와 VLC Agent 에서는 가시광 통신 서비스를 유저 요청에 따라 제공해주며, VLC Transmitter는 조명을 통해 IoT Server의 서비스 데이터를 전송하는 역할을 합니다. VLC Receiver는 가시광 데이터를 수신하여 서버가 제공하는 서비스를 제공받는 클라이언트 역할을 합니다. VLC Receiver의 경우 안드로이드 앱으로도 개발하였습니다.</description>
    </item>
    
    <item>
      <title>가시광 통신 서비스 클라이언트 앱 개발</title>
      <link>https://soyongkim.github.io/projects/creations/vlc_client/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://soyongkim.github.io/projects/creations/vlc_client/</guid>
      <description>가시광 통신 서비스 클라이언트 앱 가시광 통신 서비스 클라이언트 앱은 가시광 통신 서비스를 제공받기 위해, 클라이언트 측에서 가시광 수신 기능을 탑재한 안드로이드 앱입니다. 이 앱은 크게 두 가지 주요 기능이 있습니다.
주요 기능 가시광 데이터 수신 시리얼 통신 기능 가시광 통신으로 데이터를 송수신하기 위한 장비가 시리얼 통신을 사용하였으며 이를 위해 클라이언트 앱에서도 시리얼 통신을 하기 위한 기능을 탑재하였습니다. 아래의 그림은 스마트폰에 시리얼 통신 장비가 usb 포트를 통해 연결되었을 때 이를 감지하고, 이 장비를 하나의 객체로 만드는 과정입니다.</description>
    </item>
    
  </channel>
</rss>