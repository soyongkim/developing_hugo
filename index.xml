<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>SDPortfoilo on SDPortfolio</title>
    <link>https://soyongkim.github.io/</link>
    <description>Recent content in SDPortfoilo on SDPortfolio</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 10 Feb 2018 18:56:13 -0500</lastBuildDate>
    
	<atom:link href="https://soyongkim.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>가시광 통신 기반 출결 관리 시스템 설계 및 구현</title>
      <link>https://soyongkim.github.io/publications/paper_attendance/</link>
      <pubDate>Wed, 31 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://soyongkim.github.io/publications/paper_attendance/</guid>
      <description>가시광 통신 기반 출결 관리 시스템 소개 전자 출결 관리 시스템은 학생의 출결 정보를 신속하고 정확하게 전송하여 처리하는 방법을 요구하는데, 이를 위해 RFID, NFC, 블루투스와 같은 전자파 기반의 통신 기술이 많이 사용됩니다. 그러나 이렇란 통신 기술 기반의 출결 관리 시스템은 설치 비용이 많이 들고, 불편하며, 부정 출석에 취약하다는 단점이 있습니다. 이러한 단점을 해결할 수 있는 것이 바로, 가시광 통신 기반 출결 관리 시스템입니다.
이 시스템은 기존에 설치된 LED 조명 인프라를 그대로 활용하기 때문에 설치비용이 적고 위치가 고정된 LED 조명으로부터 가시광을 수신하여 출결 서비스를 받기 때문에 추가 작업 없이 사용자의 정확한 위치를 손쉽게 알 수 있습니다.</description>
    </item>
    
    <item>
      <title>Search Results</title>
      <link>https://soyongkim.github.io/search/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://soyongkim.github.io/search/</guid>
      <description>This file exists solely to respond to /search URL with the related search layout template.
No content shown here is rendered, all content is based in the template layouts/page/search.html
Setting a very low sitemap priority will tell search engines this is not important content.
This implementation uses Fusejs, jquery and mark.js
Initial setup Search depends on additional output content type of JSON in config.toml
[outputs] home = [&amp;quot;HTML&amp;quot;, &amp;quot;JSON&amp;quot;]  Searching additional fileds To search additional fields defined in front matter, you must add it in 2 places.</description>
    </item>
    
    <item>
      <title>가시광 통신 서비스 서버 앱 개발</title>
      <link>https://soyongkim.github.io/projects/creations/vlc_server/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://soyongkim.github.io/projects/creations/vlc_server/</guid>
      <description>가시광 통신 서비스 서버 측 앱 개발 가시광 통신 서비스를 제공하기 위해 구성하였던 전체 장비들은 다음과 같으며, 각 장비들은 모두 KETI에서 개발한 oneM2M 사물인터넷 표준을 따르는 Mobius 플랫폼을 이용하여 개발하였습니다.
IoT Server와 VLC Agent 에서는 가시광 통신 서비스를 유저 요청에 따라 제공해주며, VLC Transmitter는 조명을 통해 IoT Server의 서비스 데이터를 전송하는 역할을 합니다. VLC Receiver는 가시광 데이터를 수신하여 서버가 제공하는 서비스를 제공받는 클라이언트 역할을 합니다. VLC Receiver의 경우 안드로이드 앱으로도 개발하였습니다.</description>
    </item>
    
    <item>
      <title>가시광 통신 서비스 클라이언트 앱 개발</title>
      <link>https://soyongkim.github.io/projects/creations/vlc_client/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://soyongkim.github.io/projects/creations/vlc_client/</guid>
      <description>가시광 통신 서비스 클라이언트 앱 가시광 통신 서비스 클라이언트 앱은 가시광 통신 서비스를 제공받기 위해, 클라이언트 측에서 가시광 수신 기능을 탑재한 안드로이드 앱입니다. 이 앱은 크게 두 가지 주요 기능이 있습니다.
주요 기능 가시광 데이터 수신 시리얼 통신 기능 가시광 통신으로 데이터를 송수신하기 위한 장비가 시리얼 통신을 사용하였으며 이를 위해 클라이언트 앱에서도 시리얼 통신을 하기 위한 기능을 탑재하였습니다. 아래의 그림은 스마트폰에 시리얼 통신 장비가 usb 포트를 통해 연결되었을 때 이를 감지하고, 이 장비를 하나의 객체로 만드는 과정입니다.</description>
    </item>
    
  </channel>
</rss>