[{"categories":null,"contents":" 가시광 통신 기반 출결 관리 시스템 소개 전자 출결 관리 시스템은 학생의 출결 정보를 신속하고 정확하게 전송하여 처리하는 방법을 요구하는데, 이를 위해 RFID, NFC, 블루투스와 같은 전자파 기반의 통신 기술이 많이 사용됩니다. 그러나 이렇란 통신 기술 기반의 출결 관리 시스템은 설치 비용이 많이 들고, 불편하며, 부정 출석에 취약하다는 단점이 있습니다. 이러한 단점을 해결할 수 있는 것이 바로, 가시광 통신 기반 출결 관리 시스템입니다.\n이 시스템은 기존에 설치된 LED 조명 인프라를 그대로 활용하기 때문에 설치비용이 적고 위치가 고정된 LED 조명으로부터 가시광을 수신하여 출결 서비스를 받기 때문에 추가 작업 없이 사용자의 정확한 위치를 손쉽게 알 수 있습니다. 또한, 전자파 간섭으로부터 자유로우므로 기존에 설치된 인프라와 상관없이 시스템을 접목하기 쉬우며, 스마트폰을 들고 있으면 가시광을 받아 출결 서비스를 받을 수 있으므로 사용자에게 편의성을 제공할 수 있습니다. 이외에도 전파를 사용하는 블루투스와는 달리 가시광은 벽을 투과할 수 없으므로 사용자는 오직 해당 장소에서만 서비스를 받을 수 있어 부정 출석을 방지할 수 있습니다.\n출결 서비스 제공 방법 출결 서비스는 아래 그림과 같은 서버에 출결 일정표를 참조하여 제공합니다.\n출결 일정표는 여러 출결 일정을 모아둔 표이며, 출결 일정은 필요한 장소와 출석을 인정하는 기간, 그리고 지각으로 처리되는 기간으로 구성되어 있습니다. 출결 일정에 표시된 시간이 되면, 해당 장소에 출결 서비스를 활성화를 시키며, 이때 그 장소에 있는 모든 조명을 통해 출결 서비스를 받을 수 있습니다. 출결 처리는 다음과 같이 진행됩니다.\n서버에서출결 서비스 활성화 요청을 하게되면, VLC Agent가 자신이 관리하는 모든 조명 장비에게 서비스 활성화를 명령하고, 조명은 서비스 활성화를 하게 됩니다. 이때 사용자가 조명에게서 데이터를 받으면, VLC Agent에게 출결 요청 메시지를 전송하고, VLC Agent는 서버에게 사용자의 요청을 전달하게 됩니다. 서버는 사용자의 요청이 부정한 방법으로 온게 아닌지 파악을 하기 위해 넌스값을 생성하여 조명에게 전달하고, 사용자가 해당 조명에서 넌스값을 성공적으로 받고 다시 서버에게 전송을 한다면, 서버는 사용자가 정확히 해당 시간에 해당 장소에 있다는 판단을 하여 출석을 인정하게 됩니다.\n아래는 위 과정을 Wireshark를 통해 캡쳐한 모습입니다. 왼쪽은 HTTP를 사용한것 이며, 오른쪽은 CoAP을 사용한 것입니다.\n","permalink":"https://soyongkim.github.io/publications/paper_attendance/","tags":["VLC","IoT","Attendance system","Security"],"title":"가시광 통신 기반 출결 관리 시스템 설계 및 구현"},{"categories":null,"contents":" This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml\n[outputs] home = [\u0026quot;HTML\u0026quot;, \u0026quot;JSON\u0026quot;]  Searching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category\n... \u0026quot;contents\u0026quot;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026quot;tags\u0026quot;:{{ .Params.tags | jsonify }}{{end}}, \u0026quot;categories\u0026quot; : {{ .Params.categories | jsonify }}, ...  Edit fuse.js options to Search static/js/search.js\nkeys: [ \u0026quot;title\u0026quot;, \u0026quot;contents\u0026quot;, \u0026quot;tags\u0026quot;, \u0026quot;categories\u0026quot; ]  ","permalink":"https://soyongkim.github.io/search/","tags":null,"title":"Search Results"},{"categories":null,"contents":" 가시광 통신 서비스 서버 측 앱 개발 가시광 통신 서비스를 제공하기 위해 구성하였던 전체 장비들은 다음과 같으며, 각 장비들은 모두 KETI에서 개발한 oneM2M 사물인터넷 표준을 따르는 Mobius 플랫폼을 이용하여 개발하였습니다.\nIoT Server와 VLC Agent 에서는 가시광 통신 서비스를 유저 요청에 따라 제공해주며, VLC Transmitter는 조명을 통해 IoT Server의 서비스 데이터를 전송하는 역할을 합니다. VLC Receiver는 가시광 데이터를 수신하여 서버가 제공하는 서비스를 제공받는 클라이언트 역할을 합니다. VLC Receiver의 경우 안드로이드 앱으로도 개발하였습니다.\n서버 측 앱의 주요 기능은 다음과 같습니다.\n주요 기능 시리얼 통신 기능 VT에서 VLC 수신 조명 장비와 통신을 하기 위한 시리얼 통신 기능입니다. npm 패키지툴을 통해 serialport 패키지를 적용하여 구현하였습니다.\n서버의 가시광 통신 서비스 제공 요청이 오면 아래와 같이 VT 장비에서 실제로 조명 장비에게 데이터를 전송하도록 시리얼 통신을 통해 전송합니다.\noneM2M 표준 기반 HTTP 메시지 전송 기능 HTTP 모듈을 통해 oneM2M 표준에 맞춰 메시지를 설정하고 다른 장비로 메시지를 전송하는 기능입니다.\n데이터베이스에서 최신 데이터 추출 Mobius 플랫폼에서 oneM2M 표준에 맞춰 서비스 요청을 하게 되면, 요청 트랜지션 하나당 새로운 cin 객체가 요청 시간을 기준으로 이름이 동적으로 생성되어 저장을 하는데, 이를 기반으로 가장 최근에 저장하였던 데이터를 Mysql에서 불러오는 기능입니다.\n이 기능을 통해 가장 최근 서비스 요청이 무엇이었는지 파악할 수 있습니다.\n테스트베드 구축 ","permalink":"https://soyongkim.github.io/projects/creations/vlc_server/","tags":["JavaScript","Node.js","VLC","IoT","REST APIs"],"title":"가시광 통신 서비스 서버 앱 개발"},{"categories":null,"contents":" 가시광 통신 서비스 클라이언트 앱 가시광 통신 서비스 클라이언트 앱은 가시광 통신 서비스를 제공받기 위해, 클라이언트 측에서 가시광 수신 기능을 탑재한 안드로이드 앱입니다. 이 앱은 크게 두 가지 주요 기능이 있습니다.\n주요 기능 가시광 데이터 수신 시리얼 통신 기능 가시광 통신으로 데이터를 송수신하기 위한 장비가 시리얼 통신을 사용하였으며 이를 위해 클라이언트 앱에서도 시리얼 통신을 하기 위한 기능을 탑재하였습니다. 아래의 그림은 스마트폰에 시리얼 통신 장비가 usb 포트를 통해 연결되었을 때 이를 감지하고, 이 장비를 하나의 객체로 만드는 과정입니다.\n위 과정에서 받은 가시광 통신 장비 객체를 이용하여 데이터를 수신하고, 서버와 미리 약속한 바이트 단위대로 데이터를 파싱하고 이를 활용합니다.\n가시광 통신 서비스를 위한 주요 기능 HTTP 메시지 송수신 기능 가시광 통신 기반 서비스 타입을 크게 두 가지로 분류하였습니다. 첫 번째는 가시광 데이터를 수신하면 그 데이터를 단순히 사용자에게 보여주는 서비스이고, 두 번째는 이 데이터를 다시 서버에게 전송하여, 응답을 받는 형식의 서비스입니다. 후자의 경우, 클라이언트 앱에서 서버에게 데이터를 전송하는 기능이 필요하며 이를 위해 HTTP 메시지를 전달하고 받기 위한 기능을 탑재하였습니다.\n또한 HTTP 메시지 송수신 기능은, 여러 액티비티에서 사용할 수 있으므로, 서비스로 구현함으로써 재사용성을 높였습니다.\n타이머 기능 이 기능은 가시광 통신을 이용한 출결 관리 서비스에서 남은 출결 시간을 표현하기 위해 탑재하였으며, 브로드캐스트 리시버를 이용하여 앱 자체가 꺼져있어도 카운팅이 계속될 수 있도록 구현하였습니다.\n가시광 통신 서비스 구현 가시광 통신 기반 출결 관리 서비스 가시광 통신 기반 출결 관리 서비스는 정해진 장소에서 가시광 통신 데이터를 수신하여야만 출석을 인정하는 서비스로, 관리자가 출결 서비스 활성화를 서버에게 요청하면, 출결 서비스 활성화와 함께 타이머가 작동하여 남은 활성화 시간을 나타냅니다. 출결 서비스 요청자들은 이 시간동안 자신의 계정으로 로그인을 하여 가시광 데이터를 받아서 출결 서비스를 받을 수 있습니다.\n가시광 통신 기반 박물관 전시 서비스 박물관 전시 서비스는 작품하나를 비추는 조명을 통해 작품의 설명을 나타내는 데이터를 전송하는 서비스입니다.\n시연 영상  ","permalink":"https://soyongkim.github.io/projects/creations/vlc_client/","tags":["Java","Kotiln","Android","VLC","IoT","REST APIs"],"title":"가시광 통신 서비스 클라이언트 앱 개발"}]